# PostGIS + GeoServer Docker Infrastructure

version: '3.8'

services:
  # PostGIS Database with spatial extensions
  postgis:
    image: postgis/postgis:15-3.3
    container_name: escap_postgis
    environment:
      POSTGRES_DB: escap_geospatial
      POSTGRES_USER: geouser
      POSTGRES_PASSWORD: geopass123
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgis_data:/var/lib/postgresql/data
      - ./scripts/init-postgis.sql:/docker-entrypoint-initdb.d/init-postgis.sql
    ports:
      - "5432:5432"
    command: postgres -c shared_preload_libraries=pg_stat_statements -c max_connections=200
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U geouser -d escap_geospatial"]
      interval: 10s
      timeout: 5s
      retries: 5

  # GeoServer for WMS/WFS services
  geoserver:
    image: kartoza/geoserver:2.23.0
    container_name: escap_geoserver
    environment:
      GEOSERVER_ADMIN_USER: admin
      GEOSERVER_ADMIN_PASSWORD: geoserver123
      GEOSERVER_DATA_DIR: /opt/geoserver/data_dir
      ENABLE_JSONP: 'true'
      MAX_FILTER_RULES: 20
      OPTIMIZE_LINE_WIDTH: 'false'
      FOOTPRINTS_DATA_DIR: /opt/footprints_dir
      GEOWEBCACHE_CACHE_DIR: /opt/geoserver/data_dir/gwc
      SAMPLE_DATA: 'false'
      STABLE_EXTENSIONS: 'wps,csw,inspire,control-flow,pyramid,gdal,ogr-wfs,printing,importer,monitor,feature-pregeneralized,vectortiles'
      COMMUNITY_EXTENSIONS: 'mbtiles,cog'
    volumes:
      - geoserver_data:/opt/geoserver/data_dir
      - geoserver_footprints:/opt/footprints_dir
      - ./data:/opt/geoserver_data
    ports:
      - "8080:8080"
    depends_on:
      postgis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/geoserver/web/"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for WebSocket scaling and caching
  redis:
    image: redis:7-alpine
    container_name: escap_redis
    command: redis-server --appendonly yes --maxmemory 1gb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Data processing service
  data_processor:
    build:
      context: ./services/data-processor
      dockerfile: Dockerfile
    container_name: escap_processor
    environment:
      DATABASE_URL: postgresql://geouser:geopass123@postgis:5432/escap_geospatial
      REDIS_URL: redis://redis:6379
      GEOSERVER_URL: http://geoserver:8080/geoserver
      GEOSERVER_USER: admin
      GEOSERVER_PASSWORD: geoserver123
      PROCESSING_QUEUE: file_processing
    volumes:
      - ./data:/app/data
      - processing_temp:/app/temp
    depends_on:
      postgis:
        condition: service_healthy
      redis:
        condition: service_healthy
      geoserver:
        condition: service_healthy

  # WebSocket collaboration service
  websocket_server:
    build:
      context: ./services/websocket
      dockerfile: Dockerfile
    container_name: escap_websocket
    environment:
      REDIS_URL: redis://redis:6379
      PORT: 3001
      CORS_ORIGIN: http://localhost:5173
    ports:
      - "3001:3001"
    depends_on:
      redis:
        condition: service_healthy

  # NGINX reverse proxy and tile cache
  nginx:
    image: nginx:alpine
    container_name: escap_nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/cache:/var/cache/nginx
    ports:
      - "80:80"
    depends_on:
      - geoserver
      - websocket_server

volumes:
  postgis_data:
  redis_data:
  geoserver_data:
  geoserver_footprints:
  processing_temp:

networks:
  default:
    driver: bridge