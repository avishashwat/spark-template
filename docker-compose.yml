version: '3.8'

services:
  # PostGIS Database - Spatial database for storing boundaries and metadata
  postgis:
    image: postgis/postgis:15-3.3
    container_name: un-escap-postgis
    environment:
      POSTGRES_DB: un_escap_geospatial
      POSTGRES_USER: geouser
      POSTGRES_PASSWORD: geopass123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgis_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - geospatial-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U geouser -d un_escap_geospatial"]
      interval: 30s
      timeout: 10s
      retries: 3

  # GeoServer - Map server for serving spatial data
  geoserver:
    image: kartoza/geoserver:2.23.0
    container_name: un-escap-geoserver
    environment:
      GEOSERVER_DATA_DIR: /opt/geoserver/data_dir
      GEOSERVER_ADMIN_PASSWORD: geoserver123
      GEOSERVER_ADMIN_USER: admin
      INITIAL_MEMORY: 2G
      MAXIMUM_MEMORY: 4G
      STABLE_EXTENSIONS: "wps,csw"
      COMMUNITY_EXTENSIONS: "cog"
      POSTGRES_DB: un_escap_geospatial
      POSTGRES_USER: geouser
      POSTGRES_PASS: geopass123
      POSTGRES_HOST: postgis
      POSTGRES_PORT: 5432
    ports:
      - "8080:8080"
    volumes:
      - geoserver_data:/opt/geoserver/data_dir
      - ./geoserver-config:/tmp/geoserver-config
      - ./data:/opt/data
    depends_on:
      postgis:
        condition: service_healthy
    networks:
      - geospatial-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/geoserver/web/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis - Caching layer for performance
  redis:
    image: redis:7-alpine
    container_name: un-escap-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - geospatial-network
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru

  # GDAL Processing Service - For raster processing and COG conversion
  gdal-processor:
    build:
      context: .
      dockerfile: Dockerfile.gdal
    container_name: un-escap-gdal
    environment:
      GEOSERVER_URL: http://geoserver:8080/geoserver
      GEOSERVER_USER: admin
      GEOSERVER_PASSWORD: geoserver123
      POSTGRES_HOST: postgis
      POSTGRES_DB: un_escap_geospatial
      POSTGRES_USER: geouser
      POSTGRES_PASSWORD: geopass123
      REDIS_URL: redis://redis:6379
    volumes:
      - ./data:/app/data
      - ./uploads:/app/uploads
      - ./processed:/app/processed
    depends_on:
      - postgis
      - geoserver
      - redis
    networks:
      - geospatial-network
    restart: unless-stopped
    ports:
      - "8081:8081"

volumes:
  postgis_data:
    driver: local
  geoserver_data:
    driver: local
  redis_data:
    driver: local

networks:
  geospatial-network:
    driver: bridge