ðŸ”§ Docker Fix for GitHub Codespaces
==================================

The Docker permission issues you're experiencing are common in Codespaces. Here's the step-by-step solution:

STEP 1: Fix Docker Permissions
------------------------------
Run these commands in your Codespaces terminal:

```bash
# Make the fix script executable
chmod +x ./scripts/codespaces-docker-fix.sh

# Run the Docker fix
./scripts/codespaces-docker-fix.sh
```

STEP 2: Deploy Infrastructure
-----------------------------
Once Docker is working, deploy the infrastructure:

```bash
# Deploy the complete infrastructure
./scripts/deploy.sh
```

STEP 3: Verify Services
-----------------------
Check that all services are running:

```bash
# Check service status
docker-compose ps

# Check logs if needed
docker-compose logs
```

STEP 4: Access Your Application
-------------------------------
Once deployed, you'll have:

- **Main App**: http://localhost:3000
- **Admin Panel**: http://localhost:3000?admin=true  
- **GeoServer**: http://localhost:8080/geoserver
- **PostGIS**: localhost:5432 (database)

TROUBLESHOOTING
---------------

If Docker still doesn't work:

1. **Restart Codespace**: Sometimes a fresh restart fixes permission issues
2. **Manual Docker Start**: 
   ```bash
   sudo service docker restart
   sudo chmod 666 /var/run/docker.sock
   ```
3. **Check Docker Status**: 
   ```bash
   sudo service --status-all | grep docker
   ```

WHAT THIS INFRASTRUCTURE PROVIDES
---------------------------------

âœ… **PostGIS Database**: Fast spatial data storage with optimized indexing
âœ… **GeoServer**: Automatic raster/vector tile generation for 50-100x faster loading
âœ… **Redis Cache**: In-memory caching for instant boundary loading
âœ… **Automated Conversion**: TIF â†’ COG, SHP â†’ Vector Tiles via admin panel
âœ… **WebSocket Collaboration**: Real-time multi-user map synchronization

NEXT STEPS AFTER DEPLOYMENT
---------------------------

1. **Upload Test Data**: Use admin panel to upload your Bhutan raster/shapefile
2. **Verify Performance**: Compare loading speeds (should be near-instant)
3. **Test Collaboration**: Share maps in real-time with multiple users
4. **Monitor Resources**: Check memory/CPU usage with heavy datasets

The infrastructure will automatically handle:
- Converting your TIF files to Cloud Optimized GeoTIFF (COG)
- Converting shapefiles to vector tiles
- Spatial indexing for instant queries
- Caching for repeated requests

Run the commands above and let me know if you encounter any issues!